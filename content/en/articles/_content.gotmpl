{{ $data := dict }}
{{ $url := printf "https://api.zotero.org/groups/%s/collections/%s/items/" site.Params.zotero.group site.Params.zotero.collection }}
{{ with resources.GetRemote $url }}
  {{ with .Err }}
    {{ errorf "Unable to get remote resource %s: %s" $url . }}
  {{ else }}
    {{ $data = . | transform.Unmarshal }}
  {{ end }}
{{ else }}
  {{ errorf "Unable to get remote resource %s" $url }}
{{ end }}

{{ range $data }}
  {{ if not .data.title }}
    {{ continue }}
  {{ end }}

  {{ $authors := slice }}
  {{ range .data.creators }}
    {{ $authors = $authors | append (printf "%s %s" .firstName .lastName) }}
  {{ end }}

  {{ $tags := slice }}
  {{ range .data.tags }}
    {{ $tags = $tags | append .tag }}
  {{ end }}

  {{ $content := dict 
        "mediaType" "text/markdown" 
        "value" .data.abstractNote 
        }}

  {{ $publication := dict
        "issn" .data.ISSN 
        "title" .data.publicationTitle
        }}

  {{ $date := "" }}
  {{ with .data.date }}
    {{ $date =  (printf "%s-%s-01" (index (split . "/") 1) (index (split . "/") 0)) | time }}
  {{ end }} 

  {{ $page := dict
        "title" .data.title
        "path" .data.title
        "kind" "page"
        "dates" (dict
          "date" $date
          )
        "params" (dict 
          "authors" $authors
          "doi" .data.DOI
          "itemType" .data.itemType
          "publication" (dict
            "issn" .data.ISSN 
            "title" .data.publicationTitle
            "volume" .data.volume
            "issue" .data.issue
            )
          "rawData" .data
          "tags" $tags
          "url" .data.url
          )
        "content" (dict 
          "mediaType" "text/markdown" 
          "value" .data.abstractNote
          )
        }}

  {{ $.AddPage $page }}
{{ end }}
